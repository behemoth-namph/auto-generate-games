{"ui": {"feedback": ["Highlight valid moves", "Animate AI move", "Show AI thinking state", "Display winner/loser/draw message"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#aaaaaa", "player_1": "#000000", "player_2": "#ffffff"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click/tap a column to drop a disc", "Hover for column preview", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"seed": "ABC123", "players": {"ai": 1, "human": 1}, "game_name": "Connect Four Solo", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "Drop discs into a 7x6 grid by column; gravity places the piece in the lowest available cell. First to connect four in a row, column, or diagonal wins; playing against a basic AI.", "session_minutes": [5, 15]}, "rules": [{"id": "R1", "text": "Clear, testable rule with input/output (MUST/SHOULD/CAN).", "type": "core|validation|optional"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple algorithm description to pick a valid column.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a moderate algorithm description with limited lookahead.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST use an enhanced algorithm description with planning and pruning.", "type": "core"}], "state": {"board": {"type": "grid", "topology": "square", "neighbors": ["up", "down", "left", "right", "diag_up_left", "diag_up_right", "diag_down_left", "diag_down_right"], "dimensions": [6, 7]}, "entities": [{"name": "Player", "properties": {"id": 1, "type": "human", "color": "#000000", "pieces_played": 0}, "initial_state": {"pieces_played": 0}}, {"name": "AI", "properties": {"id": 2, "type": "ai", "color": "#ffffff", "pieces_played": 0}, "initial_state": {"depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}}, {"name": "Board", "properties": {"cols": 7, "grid": [[null, null, null, null, null, null, null], [null, null, null, null, null, null, null], [null, null, null, null, null, null, null], [null, null, null, null, null, null, null], [null, null, null, null, null, null, null], [null, null, null, null, null, null, null]], "rows": 6}, "initial_state": {"cols": 7, "grid": [[null, null, null, null, null, null, null], [null, null, null, null, null, null, null], [null, null, null, null, null, null, null], [null, null, null, null, null, null, null], [null, null, null, null, null, null, null], [null, null, null, null, null, null, null]], "rows": 6}}, {"name": "Game", "properties": {"status": "playing", "last_move": null, "move_count": 0, "current_player": 1}, "initial_state": {"status": "playing", "last_move": null, "move_count": 0, "current_player": 1}}]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation and mechanics.capture; update state; switch to AI; check end conditions", "condition": "current_player == 1 AND game.status == playing AND [move validity conditions]", "parameters": ["columnIndex"]}, {"name": "ai_move", "result": "AI calculates move using algorithm; apply mechanics.move_validation and mechanics.capture; update state; switch to human; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 30}, "config": {"rng_seed": "ABC123", "seed_source": "meta.seed", "show_ai_thinking": true, "default_difficulty": "medium", "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "All discs start off-board; each move drops a disc into a chosen column and gravity places it in the lowest available row.", "starting_player_rule": "human"}, "capture": {"type": "none", "result": "No capture mechanics in Connect Four; only placement and win condition evaluation.", "directions": [], "chain_capture": false, "min_chain_length": 0, "require_sandwich": false, "capture_algorithm": {"name": "none", "steps": [], "inputs": ["row", "col", "current_player", "board", "parameters"], "outputs": {"affected_count": "0"}, "parameters": {"directions": [], "require_bounded": false, "min_chain_length": 0}}}, "scoring": {"method": "points", "winner_determination": "A player wins when they achieve four in a row; if the board fills with no winner, the game is a draw."}, "movement": {"range": 1, "allowed": "placement", "directions": ["down"]}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "none", "pass_if_no_valid_move": false}, "move_validation": {"validity_checks": ["column_has_space", "column_index_in_range", "board_not_full_in_column"], "must_place_on_empty": true, "validation_algorithm": {"name": "drop_gravity", "steps": ["If selected column is full, return invalid.", "Find the lowest empty row in the column.", "Return preview position for placement.", "Apply placement if valid."], "inputs": ["row", "col", "current_player", "board"], "outputs": {"preview": "object", "is_valid": "boolean"}, "parameters": {"gravity": true, "directions": ["down"], "require_bounded": false, "min_chain_length": 4}}}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 30, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "Board updated; turn passes to AI; last_move recorded", "when": "Player places in a valid column", "given": "A valid placement exists per game rules"}, {"then": "AI selects a valid column within 2 seconds and updates state", "when": "AI calculates move", "given": "AI's turn, difficulty='easy'"}, {"then": "AI MUST execute a winning move if available", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "AI can win in 1 move"}, {"then": "AI MUST block human's potential winning move if possible", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "Human can win next turn"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "human_win_by_connect_four", "check_logic": "Detect four consecutive human discs in any direction"}, {"priority": "immediate", "condition": "ai_win_by_connect_four", "check_logic": "Detect four consecutive AI discs in any direction"}], "draw": [{"priority": "end_turn", "condition": "board_full_with_no_winner", "check_logic": "All cells occupied and no four-in-a-row"}], "lose": [{"priority": "immediate", "condition": "human_lost_by_ai_four", "check_logic": "Mirror of human win condition"}]}}