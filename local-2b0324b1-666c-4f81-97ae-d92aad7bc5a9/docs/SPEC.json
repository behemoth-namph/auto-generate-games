{"ui": {"feedback": ["Highlight valid moves", "Animate AI move", "Show AI thinking state", "Display winner/loser modal"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#aaaaaa", "player_1": "#000000", "player_2": "#ffffff"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click/tap to submit Rock, Paper, or Scissors", "Hover for hints", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"players": {"ai": 1, "human": 1}, "rng_seed": "seed-12345", "game_name": "rock paper scrissors", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "Rock Paper Scissors: each round both players secretly select rock, paper, or scissors and reveal simultaneously; rock beats scissors, scissors beats paper, and paper beats rock; ties occur on equal choices. The engine resolves each round deterministically and supports best-of-N or timed formats.", "session_minutes": [5, 15]}, "rules": [{"id": "R1", "text": "Clear, testable rule with input/output (MUST/SHOULD/CAN).", "type": "core"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple, deterministic random-looking selection strategy.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a moderate strategy with some foresight.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST use an advanced strategy with deeper evaluation.", "type": "core"}], "state": {"board": {"type": "abstract", "topology": "none", "neighbors": "", "dimensions": [0, 0]}, "scores": {"ai": 0, "human": 0}, "entities": [{"name": "Player", "properties": {"id": 1, "type": "human", "color": "#000000", "pieces_played": 0}, "initial_state": {"pieces_played": 0}}, {"name": "AI", "properties": {"depth": 0, "algorithm": "rule_based", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}, "initial_state": {"depth": 0, "algorithm": "rule_based", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}}, {"name": "Board", "properties": {"cols": 0, "grid": "N/A for abstract rock-paper-scissors; no spatial board", "rows": 0}, "initial_state": {}}, {"name": "Game", "properties": {"status": "playing", "last_move": {}, "move_count": 0, "current_player": 1}, "initial_state": {"status": "playing", "move_count": 0, "current_player": 1}}], "player_roles": {"1": "human", "2": "ai"}, "current_round": 1, "players_order": [1, 2]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation and mechanics.capture; update scores and rounds; switch to AI; check end conditions", "condition": "current_player == 1 AND game.status == playing", "parameters": ["choice"]}, {"name": "ai_move", "result": "AI selects a deterministic choice based on rule_based strategy; apply mechanics.move_validation and mechanics.capture; update scores; switch to human; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 30}, "config": {"show_ai_thinking": true, "default_difficulty": "medium", "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "No placement required. Each round, both players choose Rock, Paper, or Scissors.", "starting_player_rule": "human"}, "capture": {"type": "none", "result": "Round outcome determined by standard RPS rules; scores updated; potential end-of-game evaluation.", "directions": [], "chain_capture": false, "min_chain_length": 0, "require_sandwich": false, "capture_algorithm": {"name": "apply_round_result", "steps": ["Compare the two choices using RPS rules.", "Update per-round result and scores.", "Advance to next round or end game if threshold reached."], "inputs": ["current_round", "current_player", "board", "choices"], "outputs": {"winner": "int", "round_result": "string"}, "parameters": {"directions": [], "require_bounded": false, "min_chain_length": 0}}}, "scoring": {"method": "points", "winner_determination": "First to reach the configured number of round wins (best-of-N) or based on timed rounds; ties possible."}, "movement": {"range": 0, "allowed": "none", "directions": []}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game after two consecutive passes", "pass_if_no_valid_move": false}, "turn_timers": {"ai_seconds": 2, "human_seconds": 30}, "move_validation": {"validity_checks": ["choice in {rock, paper, scissors}", "inputs normalized to lowercase before validation"], "must_place_on_empty": false, "validation_algorithm": {"name": "choice_validation", "steps": ["Normalize input to lowercase.", "Verify the selected option is one of rock, paper, or scissors.", "Ensure the round is active and the game expects a move from current_player."], "inputs": ["round", "current_player", "board"], "outputs": {"preview": null, "is_valid": true}, "parameters": {"gravity": false, "directions": [], "require_bounded": false, "case_insensitive": true, "min_chain_length": 0}}}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 30, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "Captured pieces/cards/territory update exactly as defined", "when": "Player performs a capturing move", "given": "A valid capture exists per game rules"}, {"then": "AI uses simple algorithm, makes valid move within 2s", "when": "AI calculates move", "given": "AI's turn, difficulty='easy'"}, {"then": "AI MUST execute winning move", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "AI can win in 1 move"}, {"then": "AI MUST block human's winning move", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "Human can win next turn"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "human reaches rounds_to_win", "check_logic": "Compare human score against rounds_to_win"}], "draw": [{"priority": "end_turn", "condition": "scores are tied after final round", "check_logic": "Compare scores at end"}], "lose": [{"priority": "immediate", "condition": "ai reaches rounds_to_win", "check_logic": "Compare AI score against rounds_to_win"}], "best_of_n": 3, "rounds_to_win": 2}}