{"ui": {"feedback": ["Highlight valid moves", "Animate AI move", "Show AI thinking state", "Display winner/ loser messages"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#aaaaaa", "player_1": "#000000", "player_2": "#ffffff"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click/tap to make move", "Drag to glide path for nectar-baiting moves", "Hover for preview/hints", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"players": {"ai": 1, "human": 1}, "game_name": "Dragonfly Grid", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "Drag dragonflies on a 6x6 grid toward nectar cells. Tap to move to an adjacent empty cell, or drag to glide along a path. The AI places pond reeds to block routes, creating dynamic obstacles.", "session_minutes": [5, 20]}, "rules": [{"id": "R1", "text": "All inputs and outcomes MUST be deterministic and replayable given fixed seeds.", "type": "core"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple distance-based heuristic to move toward nectar and avoid reeds.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a pathfinding heuristic (e.g., A* with reeds treated as obstacles) to select a near-optimal move.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST perform lookahead using minimax or MCTS with a bounded depth to evaluate nectar access and reed placement.", "type": "core"}], "state": {"board": {"type": "grid", "topology": "square", "neighbors": ["up", "down", "left", "right"], "dimensions": [6, 6]}, "entities": [{"name": "Player", "properties": {"id": "int (1 for human, 2 for AI)", "type": "string (human|ai)", "color": "string", "pieces_played": "int"}, "initial_state": {"pieces_played": 0}}, {"name": "AI", "properties": {"depth": "int (minimax depth, if applicable)", "algorithm": "string (random|minimax|mcts|rule_based)", "difficulty": "string (easy|medium|hard)", "is_thinking": "boolean", "response_delay_ms": "int (for better UX)"}, "initial_state": {"depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}}, {"name": "Board", "properties": {"cols": "int", "grid": "2D array of cells; each cell may hold a dragonfly id or null; nectar flags and reeds stored per cell", "rows": "int"}, "initial_state": {}}, {"name": "Game", "properties": {"points": {"ai": "int", "human": "int"}, "status": "string (playing|human_wins|ai_wins|draw)", "last_move": "object", "move_count": "int", "nectar_target": "int", "current_player": "int (1 or 2)"}, "initial_state": {"points": {"ai": 0, "human": 0}, "status": "playing", "last_move": null, "move_count": 0, "nectar_target": 5, "current_player": 1}}]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation and mechanics.capture; update game state; switch to AI; check end conditions", "condition": "current_player == 1 AND game.status == playing AND move is valid per mechanics.move_validation", "parameters": ["dragonfly_id", "destination_row", "destination_col"]}, {"name": "ai_move", "result": "AI calculates move using algorithm; apply mechanics.move_validation and mechanics.capture; update state; switch to human; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 30}, "config": {"show_ai_thinking": true, "default_difficulty": "medium", "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "Dragonflies start on predefined nectar-adjacent starting cells. Nectar cells are scattered on the grid; reeds are placed by AI over time to block routes.", "starting_player_rule": "human"}, "capture": {"type": "none", "result": "No capture occurs; reeds placed by AI persist as blocking obstacles", "directions": [], "chain_capture": false, "min_chain_length": 0, "require_sandwich": false, "capture_algorithm": {"name": "n/a", "steps": [], "inputs": ["row", "col", "current_player", "board", "parameters"], "outputs": {"affected_count": 0}, "parameters": {"directions": [], "require_bounded": false, "min_chain_length": 0}}}, "scoring": {"method": "points", "winner_determination": "First to reach nectar_target points wins; if both reach target, player with fewer moves wins; draw if no moves and no points have changed for a full round"}, "movement": {"range": "step:1; slide:any (until blocked or until a nectar/end condition is reached)", "allowed": "step|slide", "directions": ["up", "down", "left", "right"]}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game after two consecutive passes", "pass_if_no_valid_move": true}, "move_validation": {"validity_checks": ["destination cell is within bounds", "destination cell is empty", "if path length > 1, the path must be continuous through empty cells", "path must not cross any pond reeds", "for glide moves, path ends on a nectar cell or an empty cell with valid continuation"], "must_place_on_empty": true, "validation_algorithm": {"name": "path_check", "steps": ["Verify destination within bounds and empty", "If move length == 1, ensure adjacency", "If glide path, ensure all intermediate cells are empty and not blocked by reeds", "Ensure end cell is allowable (empty or nectar as per move type)", "Return is_valid and a preview of affected cells"], "inputs": ["row", "col", "current_player", "board"], "outputs": {"preview": "object", "is_valid": "boolean"}, "parameters": {"gravity": false, "directions": ["up", "down", "left", "right"], "require_bounded": true, "min_chain_length": 1}}}, "blocker_introduction": {"effects": ["Add reed to cell; update path availability; possible blocking of nectar access"], "description": "AI may place pond reeds to block routes between dragonflies and nectar cells", "trigger_conditions": ["AI turn end", "blocked_path_detected"]}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 30, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "Dragonfly moves to the destination; board updates; reeds unaffected", "when": "Player performs a tapping move to an adjacent empty cell", "given": "A valid path move exists per game rules"}, {"then": "Dragonfly glides along the path; intermediate cells updated; end state valid", "when": "Player drags to glide along a path to a nectar or valid end cell", "given": "A valid glide move exists per game rules"}, {"then": "AI uses simple heuristic and moves within 2 seconds", "when": "AI calculates move", "given": "AI's turn, difficulty='easy'"}, {"then": "Reed is placed and affects subsequent path calculations", "when": "AI ends its turn", "given": "AI can place a reed blocking a route"}, {"then": "Human wins and game ends", "when": "Human turn achieves nectar_target", "given": "Human can win by reaching nectar_target"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "human_points >= nectar_target", "check_logic": "Human dragonflies have accumulated nectar_target points"}, {"priority": "immediate", "condition": "ai_points >= nectar_target", "check_logic": "AI dragonflies have accumulated nectar_target points"}], "draw": [{"priority": "end_turn", "condition": "max_rounds_reached AND neither player reached nectar_target", "check_logic": "Round cap reached without winner"}], "lose": [{"priority": "end_turn", "condition": "Neither player reaches nectar_target within max_rounds and all dragonflies are unable to move", "check_logic": "End-of-round stagnation check"}]}}