{"ui": {"aria": {"live_region": "polite", "labels_enabled": true}, "feedback": ["Highlight valid moves", "Animate AI move", "Show Sea-storm token spawns", "Display winner/defeat message"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#aaaaaa", "player_1": "#1e90ff", "player_2": "#ff5555"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Tap to select a pirate", "Tap adjacent empty cell to move", "Drag for march", "Hover for preview/hints", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"players": {"ai": 1, "human": 1}, "game_name": "Pirate Pathboard", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "Tap a pirate to select, then tap an adjacent empty cell to move or drag along a march; AI intermittently drops sea-storm tokens to impede progress towards treasure docks.", "session_minutes": [10, 60]}, "rules": [{"id": "R1", "text": "Clear, testable rule with input/output MUST be defined; violations MUST return {{ errorCode, message }}.", "type": "core|validation|optional"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple random-valid-move strategy.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a moderate-minimax strategy with depth 4.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST use an advanced predictive-minimax/MCTS hybrid with depth up to 6.", "type": "core"}], "state": {"board": {"type": "grid", "topology": "square", "neighbors": ["up", "down", "left", "right"], "dimensions": [8, 8]}, "entities": [{"name": "Player", "properties": {"id": "1", "type": "human", "color": "#1e90ff", "pieces_played": "int"}, "initial_state": {"pieces_played": 0}}, {"name": "AI", "properties": {"id": "2", "type": "ai", "color": "#ff5555", "pieces_played": "int"}, "initial_state": {"depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}}, {"name": "Board", "properties": {"cols": "int", "grid": "2D array of cells; each cell holds occupantId|null and cell type", "rows": "int"}, "initial_state": {}}, {"name": "Game", "properties": {"status": "string (playing|human_wins|ai_wins|draw)", "last_move": "object", "move_count": "int", "current_player": "int (1 or 2)"}, "initial_state": {"status": "playing", "move_count": 0, "current_player": 1}}]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation and mechanics.capture; update state; potentially trigger AI turn; check end conditions", "condition": "current_player == 1 AND game.status == playing", "parameters": ["sourceId", "destinationRow", "destinationCol"]}, {"name": "ai_move", "result": "AI calculates move using algorithm; apply mechanics.move_validation and mechanics.capture; update state; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 30}, "config": {"show_ai_thinking": true, "default_difficulty": "medium", "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "Human pirates occupy the bottom two rows; AI pirates occupy the top two rows. Treasure docks are placed on the opposing back edge. Each side starts with an equal number of pirates. Sea-storm tokens appear on the board as obstacles that may block paths or slow movement.", "starting_player_rule": "human"}, "capture": {"type": "none", "result": "No captures occur by movement; sea-storm tokens are blocking obstacles, not captured pieces.", "directions": [], "chain_capture": false, "min_chain_length": 0, "require_sandwich": false, "capture_algorithm": {"name": "none", "steps": [], "inputs": ["row", "col", "current_player", "board", "parameters"], "outputs": {"affected_count": 0}, "parameters": {"directions": [], "require_bounded": false, "min_chain_length": 0}}}, "scoring": {"method": "points", "winner_determination": "Winner is the first side to have a pirate occupy any treasure dock; if both occupy docks on the same turn, the player who achieved it first wins; otherwise, points are tallied by remaining distance to docks when no moves remain."}, "movement": {"range": "variable (1 step for tap-move; drag may specify multiple consecutive steps up to encountered obstacle or sea-storm limit)", "allowed": "step|march", "directions": ["up", "down", "left", "right"]}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game if two consecutive passes", "pass_if_no_valid_move": true}, "move_validation": {"validity_checks": ["player_owns_piece", "destination_is_adjacent_or_contiguous_for_march", "destination_is_within_bounds", "destination_is_empty_or_contains_sea_storm_if_capture_allowed"], "must_place_on_empty": true, "validation_algorithm": {"name": "path_check", "steps": ["Verify the selected piece belongs to current_player", "Check destination is within bounds", "If a march is dragged, verify all intermediate cells are empty", "If destination is a dock, verify piece type can enter dock", "If destination contains a sea-storm token, reject unless token is removed by a prior effect"], "inputs": ["row", "col", "current_player", "board"], "outputs": {"preview": "object", "is_valid": "boolean"}, "parameters": {"gravity": false, "directions": ["up", "down", "left", "right"], "require_bounded": true, "min_chain_length": 1}}}}, "technical": {"assets": {"sounds": "movement, dock_reached, sea_storm_spawn", "sprites": "pirate tokens, docks, sea-storm tokens"}, "platform": "HTML5 Canvas", "performance": {"target_fps": 30, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}, "input_methods": ["touch", "mouse"]}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "State updates deterministically and UI reflects move", "when": "Player performs a moving action", "given": "A valid move exists"}, {"then": "AI uses simple algorithm and moves within 2s", "when": "AI calculates move", "given": "AI's turn, difficulty='easy'"}, {"then": "AI MUST execute winning move (or block human if applicable)", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "AI can win in 1 move"}, {"then": "AI MUST block human's winning move when possible", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "Human can win next turn"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "human_reaches_dock", "check_logic": "Any human pirate occupies a treasure dock cell"}], "draw": [{"priority": "end_turn", "condition": "no_legal_moves_for_current_or_opponent", "check_logic": "If current player and opponent have zero legal moves on their turns"}], "lose": [{"priority": "immediate", "condition": "ai_reaches_dock", "check_logic": "Any AI pirate occupies a treasure dock cell"}]}}