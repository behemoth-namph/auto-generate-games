{"ui": {"feedback": ["Highlight valid moves", "Animate AI move", "Show AI thinking state", "Display winner/loser message"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#aaaaaa", "player_1": "#1e90ff", "player_2": "#ff6b6b"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click/tap to move a block in a valid direction", "Hover for move previews", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"players": {"ai": 1, "human": 1}, "game_name": "Sliding Block Labyrinth", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "A classic sliding block puzzle on a grid. Players alternate sliding blocks one cell at a time to create a path for a shared Goal token from the start position to a designated exit.", "session_minutes": [5, 20]}, "rules": [{"id": "R1", "text": "Clear, testable rule with input/output MUST.", "type": "core|validation|optional"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple heuristic or random valid move.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a moderate search strategy.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST use an advanced search strategy.", "type": "core"}], "state": {"board": {"type": "grid", "topology": "square", "neighbors": ["up", "down", "left", "right"], "dimensions": [5, 5]}, "entities": [{"name": "Player", "properties": {"id": 1, "type": "human", "color": "#1e90ff", "ownerId": 1, "pieces_played": 0, "player_number": 1}, "initial_state": {"pieces_played": 0}}, {"name": "AI", "properties": {"depth": 4, "ownerId": 2, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "player_number": 2, "response_delay_ms": 500}, "initial_state": {"depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}}, {"name": "Board", "properties": {"cols": 5, "grid": "2D array representation with occupantId|null; each cell tracks which piece occupies it", "rows": 5}, "initial_state": {}}, {"name": "Game", "properties": {"status": "string (playing|human_wins|ai_wins|draw)", "last_move": "object", "move_count": "int", "current_player": "int (1 or 2)"}, "initial_state": {"status": "playing", "move_count": 0, "current_player": 1}}, {"name": "Goal", "properties": {"exit": "array [row,col]", "position": "array [row,col]"}, "initial_state": {"exit": [4, 4], "position": [0, 0]}}, {"name": "Blocks", "properties": {"blocks": "array of block objects"}, "initial_state": {"blocks": [{"owner": 1, "blockId": 101, "position": [0, 1]}, {"owner": 1, "blockId": 102, "position": [1, 0]}, {"owner": 1, "blockId": 103, "position": [2, 0]}, {"owner": 2, "blockId": 201, "position": [3, 4]}, {"owner": 2, "blockId": 202, "position": [3, 3]}, {"owner": 2, "blockId": 203, "position": [4, 2]}]}}], "holdings": {"note": "This game does not use player holdings.", "uses_holdings": false}}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation; apply movement; update state; switch to AI; check end conditions", "condition": "current_player == 1 AND game.status == playing", "parameters": ["blockId", "direction"]}, {"name": "ai_move", "result": "AI calculates move using algorithm; apply mechanics.move_validation and movement; update state; switch to human; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": [], "timeout_ms": 2000}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 30, "ai_move_timeout_ms": 2000}, "config": {"rng": {"algo": "xoshiro256**", "seed": 123456789, "seed_source": "server"}, "show_ai_thinking": true, "default_difficulty": "medium", "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "Initial grid setup with movable blocks for both players and a Goal at the start; the exit is a designated cell on the grid.", "starting_player_rule": "human"}, "capture": {"type": "none", "result": "No captures occur; blocks simply reposition", "directions": [], "chain_capture": false, "min_chain_length": 0, "require_sandwich": false, "capture_algorithm": {"name": "none", "steps": [], "inputs": [], "outputs": {}, "parameters": {}}}, "scoring": {"method": "points", "winner_determination": "If a player's block moves the goal to the exit, that player wins; otherwise, standard end conditions apply."}, "movement": {"range": 1, "allowed": "slide", "directions": ["up", "down", "left", "right"]}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game after one player cannot move? If both players have no legal moves, trigger draw", "pass_if_no_valid_move": true}, "move_validation": {"validity_checks": ["block ownership matches current_player", "target cell is adjacent to the selected block", "target cell is empty", "move is a one-cell slide"], "must_place_on_empty": true, "validation_algorithm": {"name": "grid_move_check", "steps": ["Verify selected block belongs to current_player", "Compute adjacent target cells in directions", "Ensure target is within bounds and empty", "Confirm move is a single-cell slide", "Return updated board state as preview if valid"], "inputs": ["row", "col", "current_player", "board", "blocks"], "outputs": {"preview": "object", "is_valid": "boolean"}, "parameters": {"gravity": false, "directions": ["up", "down", "left", "right"], "require_bounded": true, "min_chain_length": 1}}}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 30, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "Block position updates accordingly; board reflects new occupancy; last_move updated", "when": "Player slides a block onto an empty adjacent cell", "given": "A valid slide exists per game rules"}, {"then": "Win condition is satisfied and game ends with human as winner", "when": "Player moves the block carrying the Goal token into the exit cell", "given": "The goal token is moved to the exit"}, {"then": {"message": "Invalid move: ownership, adjacency, or occupancy rule violated", "errorCode": "ERR_INVALID_MOVE"}, "when": "Player attempts to move a block not owned by the current player or moves into a non-adjacent/blocked cell", "given": "Invalid move attempt"}, {"then": "Draw may occur if both players have no moves in succession", "when": "Turn starts and current player has no valid slides", "given": "Blocking occurs with no legal moves for current player"}, {"then": "AI uses simple heuristic or random valid move and responds within 2 seconds", "when": "AI calculates move", "given": "AI's turn, difficulty='easy'"}, {"then": "AI MUST execute winning move", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "AI can win in one move"}, {"then": "AI MUST block human's winning move", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "Human can win next turn"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "Goal at exit", "check_logic": "The goal token position equals the exit coordinates"}], "draw": [{"priority": "end_turn", "condition": "No legal moves for both players in successive turns", "check_logic": "If a full cycle passes with no moves"}], "lose": [{"priority": "immediate", "condition": "Goal not at exit and no legal moves for current player", "check_logic": "On turn start, if current player has zero legal moves and goal not at exit"}]}}