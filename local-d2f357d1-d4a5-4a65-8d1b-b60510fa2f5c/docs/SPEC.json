{"ui": {"feedback": ["Highlight valid moves", "Animate AI move", "Show AI thinking state", "Display winner message"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#aaaaaa", "player_1": "#000000", "player_2": "#ffffff"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click/tap to make move", "Hover for preview/hints", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"players": {"ai": 1, "human": 1}, "game_name": "Bubble Grid Matcher", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "Shoot bubbles from the top toward a hex-grid cluster; connect three or more of the same color to pop; popped bubbles leave gaps that cause cascades downward; play alternates between a human and an AI.", "session_minutes": [5, 15]}, "rules": [{"id": "R1", "text": "CLEAR, testable rule with input/output MUST / SHOULD / MAY. All actions MUST be deterministic.", "type": "core"}, {"id": "R_AI_1", "text": "AI MUST make a move within max_think_time_ms of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple evaluation strategy.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a moderate-depth search and heuristic evaluation.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST use an advanced search with deeper horizon and pruning.", "type": "core"}], "state": {"seed": 123456789, "board": {"type": "grid", "topology": "hex", "neighbors": "N, NE, SE, S, SW, NW", "dimensions": [12, 8]}, "roster": [{"id": 1, "role": "human"}, {"id": 2, "role": "ai"}], "entities": [{"name": "Player", "properties": {"id": 1, "type": "human", "color": "#1e90ff", "score": 0, "pieces_played": 0}, "initial_state": {"score": 0, "pieces_played": 0}}, {"name": "AI", "properties": {"id": 2, "depth": 4, "score": 0, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "max_think_time_ms": 2000, "response_delay_ms": 500}, "initial_state": {"depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "max_think_time_ms": 2000, "response_delay_ms": 500}}, {"name": "Board", "properties": {"cols": 8, "grid": "Hexagonal offset grid with 12 rows x 8 columns; each cell holds a color bubble or is empty", "rows": 12}, "initial_state": {}}, {"name": "Game", "properties": {"status": "playing", "last_move": {}, "move_count": 0, "current_player": 1}, "initial_state": {"status": "playing", "move_count": 0, "current_player": 1}}]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation and mechanics.capture; update state; switch to AI; check end conditions", "condition": "current_player == 1 AND game.status == playing AND target cell is empty AND move is valid", "parameters": ["row", "col", "color"]}, {"name": "ai_move", "result": "AI calculates move using algorithm; apply mechanics.move_validation and mechanics.capture; update state; switch to human; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 30}, "config": {"show_ai_thinking": true, "default_difficulty": "medium", "ai_max_think_time_ms": 2000, "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "Starting bubbles are pre-populated in the upper region to form initial clusters; subsequent bubbles spawn from the top row for the human player's shots.", "starting_player_rule": "human"}, "capture": {"type": "piece_removal", "result": "Any connected group of 3+ same-color bubbles is removed; gravity causes bubbles above to fall; new bubbles may create cascades", "directions": ["N", "NE", "SE", "S", "SW", "NW"], "chain_capture": true, "min_chain_length": 3, "require_sandwich": false, "capture_algorithm": {"name": "remove_captured", "steps": ["Identify connected group from placed cell", "If size >= min_chain_length -> remove group", "Apply gravity to re-stack bubbles", "Repeat cascades until stable"], "inputs": ["row", "col", "current_player", "board", "parameters"], "outputs": {"affected_count": "int"}, "parameters": {"directions": ["N", "NE", "SE", "S", "SW", "NW"], "require_bounded": false, "min_chain_length": 3}}}, "scoring": {"method": "points", "winner_determination": "Human and AI scores are compared; winner is the player with the higher score when the end condition is reached; if a board-clearing end is triggered, higher score wins."}, "movement": {"range": "any", "allowed": "placement", "directions": ["top_insertion"]}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game after two consecutive passes", "pass_if_no_valid_move": true}, "move_validation": {"validity_checks": ["target cell is empty", "target is within allowable spawn zone (top region)", "color is valid and within palette", "placement does not violate grid boundaries"], "must_place_on_empty": true, "validation_algorithm": {"name": "grid_scan", "steps": ["Locate target cell; verify empty", "Compute connected group of same-color bubbles from target cell", "If group size >= min_chain_length, mark as captured", "Apply capture then gravity", "If no capture, place bubble and proceed"], "inputs": ["row", "col", "current_player", "board"], "outputs": {"preview": "object", "is_valid": "boolean"}, "parameters": {"gravity": true, "directions": ["N", "NE", "SE", "S", "SW", "NW"], "require_bounded": false, "min_chain_length": 3}}}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 60, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "Captured bubbles removed and board cascades accordingly", "when": "Player performs a capturing move", "given": "A valid capture exists per game rules"}, {"then": "AI uses minimax with depth 4 within 2000 ms and makes valid move", "when": "AI calculates move", "given": "AI's turn, difficulty='medium'"}, {"then": "AI MUST execute winning move", "when": "AI's turn, difficulty='hard'", "given": "AI can win in 1 move"}, {"then": "AI MUST block human's winning move", "when": "AI's turn, difficulty='hard'", "given": "Human can win next turn"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "human_score_target_reached OR board_cleared", "check_logic": "Human reaches target score or board is cleared"}], "draw": [{"priority": "end_turn", "condition": "no_legal_moves_for_both_players", "check_logic": "End turn when both players have no legal moves"}], "lose": [{"priority": "immediate", "condition": "ai_score_target_reached", "check_logic": "AI reaches target score"}]}}