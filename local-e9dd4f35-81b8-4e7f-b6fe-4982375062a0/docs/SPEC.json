{"ui": {"feedback": ["Highlight valid moves", "Animate AI move", "Show AI thinking state", "Display winner/loser message"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#aaaaaa", "player_1": "#000000", "player_2": "#ffffff"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click/tap to make move", "Hover for preview/hints", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"players": {"ai": 1, "human": 1}, "game_name": "Battleship Studio", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "Place ships on a private 10x10 ownShipGrid and then take turns firing at the opponent's public firingGrid until all ships are sunk. The AI's moves are deterministic, driven by a fixed rng_seed to allow exact replay and testing.", "session_minutes": [15, 60]}, "rules": [{"id": "R1", "text": "Clear, testable rule with input/output MUST/CAN/SHOULD notation.", "type": "core|validation|optional"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use seeded RNG with rng_seed; moves are deterministic given the seed.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a moderate heuristic (targeted search after a hit).", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST use an advanced strategy (probability density / deeper search within seed).", "type": "core"}], "state": {"board": {"type": "grid", "boards": {"player1": {"firingGrid": {"cols": 10, "rows": 10, "cells": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], "visibility": "public"}, "ownShipGrid": {"cols": 10, "rows": 10, "cells": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], "visibility": "private"}}, "player2": {"firingGrid": {"cols": 10, "rows": 10, "cells": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], "visibility": "public"}, "ownShipGrid": {"cols": 10, "rows": 10, "cells": [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], "visibility": "private"}}}, "topology": "square", "neighbors": "up, down, left, right", "dimensions": [10, 10], "visibility_rules": "ownShipGrid private to respective owner; firingGrid visible to both players; opponent ships hidden on ownShipGrid"}, "entities": [{"name": "Player", "properties": {"id": 1, "type": "human", "color": "#000000", "ships_sunk": 0, "shots_taken": 0, "ships_placed": 0}, "initial_state": {"ships_sunk": 0, "shots_taken": 0, "ships_placed": 0}}, {"name": "AI", "properties": {"id": 2, "type": "ai", "color": "#ffffff", "depth": 4, "rng_seed": 12345, "algorithm": "minimax", "difficulty": "medium", "ships_sunk": 0, "is_thinking": false, "shots_taken": 0, "ships_placed": 0, "response_delay_ms": 500}, "initial_state": {"depth": 4, "rng_seed": 12345, "algorithm": "minimax", "difficulty": "medium", "ships_sunk": 0, "is_thinking": false, "shots_taken": 0, "ships_placed": 0, "response_delay_ms": 500}}, {"name": "Board", "properties": {"id": "board_1", "cols": 10, "grid": "per-player grids are defined in the boards section above; this field describes the relationship to per-player grids for placement and firing", "rows": 10, "tags": ["battlefield", "grid"], "coord": {"col": 0, "row": 0}, "occupantId": null, "visibility": "private"}, "initial_state": {}}, {"name": "Game", "properties": {"status": "placing", "last_move": {}, "move_count": 0, "current_player": 1}, "initial_state": {"status": "placing", "last_move": {}, "move_count": 0, "current_player": 1}}]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation and mechanics.capture; update state; switch to AI; check end conditions", "condition": "current_player == 1 AND game.status != 'game_over'", "parameters": ["row", "col"]}, {"name": "ai_move", "result": "AI calculates move using algorithm; apply mechanics.move_validation and mechanics.capture; update state; switch to human; check end conditions", "condition": "current_player == 2 AND game.status != 'game_over'", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status == 'game_over'", "parameters": []}], "max_time_seconds": 30}, "config": {"rng_seed": 12345, "difficulty_map": {"easy": "seeded_random", "hard": "deep_search_seeded", "medium": "heuristic_seeded"}, "show_ai_thinking": true, "default_difficulty": "medium", "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "Human places ships on their own grid. Standard fleet: Carrier(5), Battleship(4), Cruiser(3), Submarine(3), Destroyer(2). Ships must fit within 10x10 and cannot overlap. Drag to set length and orientation or click cells to start and end positions. After all ships are placed, switch to firing mode.", "starting_player_rule": "human"}, "capture": {"type": "none", "result": "Marks a fired cell as hit or miss and updates ship state; ships sink when all cells are hit.", "directions": [], "chain_capture": false, "min_chain_length": 0, "require_sandwich": false, "capture_algorithm": {"name": "apply_hit_result", "steps": ["Determine target cell from move.", "Check opponent ship presence at that cell.", "If hit, mark cell, update ship hit-segments; if ship fully hit, mark sunk.", "If miss, mark miss on firing grid."], "inputs": ["row", "col", "current_player", "board", "parameters"], "outputs": {"state": "object", "affected_count": "int"}, "parameters": {"directions": [], "require_bounded": false, "min_chain_length": 0}}}, "scoring": {"method": "sinking_all_opponent_ships", "winner_determination": "The player who sinks all of the opponent's ships wins. If both sides are sunk simultaneously due to a quirk, declare a draw."}, "movement": {"range": 0, "allowed": "none", "directions": []}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game after both players have declared no valid moves or one side is completely sunk", "pass_if_no_valid_move": true}, "move_validation": {"validity_checks": ["ships_do_not_overlap", "ships_within_bounds", "each_ship_placed_exactly_once", "shots_are_on_opponent_grid_and_not_previously_taken"], "must_place_on_empty": true, "validation_algorithm": {"name": "grid_scan", "steps": ["Locate target cell in current phase (placement or firing).", "If placement, verify ship does not overlap any existing ship and fits within bounds.", "If firing, verify target cell has not been shot previously on the opponent's firing grid.", "Return is_valid and a preview of affected cells if placement."], "inputs": ["row", "col", "current_player", "board"], "outputs": {"preview": "object", "is_valid": "boolean"}, "parameters": {"gravity": false, "directions": ["horizontal", "vertical"], "require_bounded": true, "min_chain_length": 2}}}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 30, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "Hit/miss and possible sink reflect in state exactly", "when": "Player performs a firing move", "given": "A valid capture exists per game rules"}, {"then": "AI uses seeded RNG with rng_seed and acts within 2s", "when": "AI calculates move", "given": "AI's turn, difficulty='easy'"}, {"then": "AI MUST execute a winning move if available", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "AI can win in 1 move"}, {"then": "AI MUST not block but allow human to win on subsequent turn if deterministic outcome dictates", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "Human can win next turn"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "opponent_ships_all_sunk", "check_logic": "All ship segments of the opponent are marked sunk"}], "draw": [{"priority": "end_turn", "condition": "no_legal_moves_for_both_sides", "check_logic": "Both players have no valid firing targets and no ships sunk this round"}], "lose": [{"priority": "immediate", "condition": "current_player_ships_all_sunk", "check_logic": "All ship segments of the current player are marked sunk"}]}}