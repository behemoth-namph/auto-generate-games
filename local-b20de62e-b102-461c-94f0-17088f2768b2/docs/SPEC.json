{"ui": {"feedback": ["Highlight valid moves", "Animate AI move", "Show AI thinking state", "Display winner message"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#aaaaaa", "player_1": "#000000", "player_2": "#ffffff"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click/tap to make move", "Hover for preview/hints", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"players": {"ai": 1, "human": 1}, "game_name": "Token Trail", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "A path-building puzzle on a 9x9 grid where players slide same-color tokens into adjacent empty spaces to connect their start area to a goal token; the AI may occasionally place a temporary wall to block paths.", "session_minutes": [5, 20]}, "rules": [{"id": "R1", "text": "MUST define clear preconditions, legality, and postconditions for each action; illegal actions MUST yield immediate error {\"errorCode\", \"message\"}.", "type": "core"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple token-neighborhood heuristic and a shallow search.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a moderate search strategy balancing path building and blocking.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST use an advanced look-ahead algorithm with seed-based determinism.", "type": "core"}], "state": {"board": {"type": "grid", "topology": "square", "neighbors": ["up", "down", "left", "right"], "dimensions": [9, 9]}, "entities": [{"name": "Player", "properties": {"id": 1, "type": "human", "color": "#000000", "pieces_played": 0}, "initial_state": {"pieces_played": 0}}, {"name": "AI", "properties": {"depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}, "initial_state": {"depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}}, {"name": "Board", "properties": {"cols": 9, "grid": "9x9 grid with cells storing occupantId|null and token color", "rows": 9}, "initial_state": {}}, {"name": "Game", "properties": {"status": "string", "last_move": "object", "move_count": "int", "current_player": "int"}, "initial_state": {"status": "playing", "move_count": 0, "current_player": 1}}]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation and mechanics.capture; update state; switch to AI; check end conditions", "condition": "current_player == 1 AND game.status == playing AND move is valid per mechanics.move_validation", "parameters": ["row", "col", "token_id"]}, {"name": "ai_move", "result": "AI calculates move using algorithm; apply mechanics.move_validation and mechanics.capture; update state; switch to human; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 30}, "config": {"show_ai_thinking": true, "default_difficulty": "medium", "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "Starting tokens are placed on designated start zones for each color. The AI may intermittently insert a temporary wall token on its turn.", "starting_player_rule": "human"}, "capture": {"type": "none", "result": "no capture occurs", "directions": [], "chain_capture": false, "min_chain_length": 0, "require_sandwich": false, "capture_algorithm": {"name": "none", "steps": [], "inputs": ["row", "col", "current_player", "board", "parameters"], "outputs": {"affected_count": 0}, "parameters": {"directions": [], "require_bounded": false, "min_chain_length": 0}}}, "scoring": {"method": "path_completion", "winner_determination": "A player wins when a connected path exists from their start zone to their goal token; if both sides achieve a path, the player with the longer valid path wins; if neither can progress and both pass, the game is a draw."}, "movement": {"range": 1, "allowed": "slide", "directions": ["up", "down", "left", "right"]}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game after two consecutive passes", "pass_if_no_valid_move": true}, "move_validation": {"validity_checks": ["target cell must be empty", "movement must be a single orthogonal slide to an adjacent cell", "selected token color must match current player"], "must_place_on_empty": true, "validation_algorithm": {"name": "grid_scan", "steps": ["bounds check", "target cell empty", "movement is one-step orthogonal", "token color matches current player", "update preview if requested"], "inputs": ["row", "col", "current_player", "board"], "outputs": {"preview": "object", "is_valid": "boolean"}, "parameters": {"gravity": false, "directions": ["up", "down", "left", "right"], "require_bounded": false, "min_chain_length": 1}}}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 30, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "Captured pieces/territory update exactly as defined", "when": "Player performs a capturing move", "given": "A valid capture exists per game rules"}, {"then": "AI uses simple algorithm, makes valid move within 2s", "when": "AI calculates move", "given": "AI's turn, difficulty='easy'"}, {"then": "AI MUST execute winning move", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "AI can win in 1 move"}, {"then": "AI MUST block human's winning move", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "Human can win next turn"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "path_from_start_to_goal_exists_for_current_player", "check_logic": "Check if there's a continuous chain of current player's tokens from their start zone to their goal token"}], "draw": [{"priority": "end_turn", "condition": "no_legal_moves_for_both_or_timeout", "check_logic": "if both players have no legal moves or both exceed time with no progress"}], "lose": [{"priority": "immediate", "condition": "path_from_start_to_goal_exists_for_opponent", "check_logic": "Check if opponent has such a path"}]}}