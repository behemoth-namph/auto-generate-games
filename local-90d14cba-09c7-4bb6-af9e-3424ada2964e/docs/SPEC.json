{"ui": {"feedback": ["Highlight valid moves", "Animate AI move", "Show AI thinking state", "Display winner/loser modal"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#aaaaaa", "player_1": "#000000", "player_2": "#ffffff"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click/tap to make move", "Hover for preview/hints", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"players": {"ai": 1, "human": 1}, "game_name": "Mine Cart Grid", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "Navigate mine cart tokens on a 6x6 grid toward exit rails by selecting a cart then moving it to a neighboring empty cell or by dragging along a straight line; AI occasionally shelves a rock blocker to complicate paths.", "session_minutes": [20, 40]}, "rules": [{"id": "R1", "text": "Clear, testable rule with input/output (MUST/SHOULD/CAN).", "type": "core"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple evaluation that prioritizes nearest exit path with minimal branching.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST consider at least two candidate moves and evaluate paths toward exit rails.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST perform deeper search with pruning and rock blocker shelf considerations.", "type": "core"}], "state": {"board": {"type": "grid", "topology": "square", "neighbors": ["up", "down", "left", "right"], "dimensions": [6, 6]}, "entities": [{"name": "Player", "properties": {"id": 1, "type": "human", "color": "#1e90ff", "pieces_played": 0}, "initial_state": {"pieces_played": 0}}, {"name": "AI", "properties": {"depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}, "initial_state": {"depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}}, {"name": "Board", "properties": {"cols": 6, "grid": "6x6 matrix with cells containing {occupantId|null, blocked|rock} entries; initial layout places a subset of mine carts for Player 1 and AI tokens along starting zones; rocks may appear as blockers", "rows": 6}, "initial_state": {}}, {"name": "Game", "properties": {"status": "string (playing|human_wins|ai_wins|draw)", "last_move": "object", "move_count": "int", "current_player": "int (1 or 2)"}, "initial_state": {"status": "playing", "move_count": 0, "current_player": 1}}]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation and mechanics.capture; update state; switch to AI; check end conditions", "condition": "current_player == 1 AND game.status == playing AND move is valid per mechanics.move_validation", "parameters": ["sourceRow", "sourceCol", "targetRow", "targetCol"]}, {"name": "ai_move", "result": "AI calculates move using algorithm; apply mechanics.move_validation and mechanics.capture; update state; switch to human; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 20}, "config": {"show_ai_thinking": true, "default_difficulty": "medium", "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "Place mine cart tokens on designated starting rows for each player; exit rails are at opposing edges; rocks blocker tokens may be introduced by AI shelves during play. All placements are deterministic and replayable given seed.", "starting_player_rule": "human"}, "capture": {"type": "none", "result": "No capture mechanics in core play; rocks blockers persist until moved or removed by rules", "directions": [], "chain_capture": false, "min_chain_length": 0, "require_sandwich": false, "capture_algorithm": {"name": "none", "steps": [], "inputs": [], "outputs": {}, "parameters": {"directions": [], "require_bounded": false, "min_chain_length": 0}}}, "scoring": {"method": "points", "winner_determination": "The human player wins if any of their carts reach an designated exit rail; the AI wins if its cart(s) reach an exit rail; if both reach exit rails in the same turn, it's a draw."}, "movement": {"range": "step:1; slide:any", "allowed": "step|slide", "directions": ["up", "down", "left", "right"]}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game after two consecutive passes", "pass_if_no_valid_move": true}, "move_validation": {"validity_checks": ["target cell is empty", "move conforms to allowed movement: single-step to adjacent cell OR drag along a straight line with a continuous, unblocked path", "drag path is straight (no turns) and terminates on an empty cell", "cannot move into a blocked cell unless the blocker is removed by game rules"], "must_place_on_empty": true, "validation_algorithm": {"name": "path_check", "steps": ["Ensure target is within allowed range (1 step or straight-line drag)", "Check path between source and target is clear of blockers", "Verify target is empty", "Confirm movement respects turn order"], "inputs": ["row", "col", "current_player", "board"], "outputs": {"preview": "object", "is_valid": "boolean"}, "parameters": {"gravity": false, "directions": ["up", "down", "left", "right"], "require_bounded": false, "min_chain_length": 1}}}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 30, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "State updates deterministically and logs the action", "when": "Player performs a valid move", "given": "A valid move exists per game rules"}, {"then": "AI selects a valid move within 2 seconds and updates state deterministically", "when": "AI calculates move", "given": "AI's turn, difficulty='easy'"}, {"then": "AI MUST execute a winning move if available", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "AI can win in 1 move"}, {"then": "AI MUST block human's winning move if possible", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "Human can win next turn"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "human_reaches_exit", "check_logic": "Any human cart on exit rail cell"}], "draw": [{"priority": "end_turn", "condition": "no_legal_moves_for_both_sides OR both_reach_exit_simultaneously", "check_logic": "End-turn evaluation shows no winner"}], "lose": [{"priority": "immediate", "condition": "ai_reaches_exit", "check_logic": "Any AI cart on exit rail cell"}]}}