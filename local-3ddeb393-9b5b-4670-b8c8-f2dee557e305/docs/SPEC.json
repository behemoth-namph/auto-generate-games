{"ui": {"feedback": ["Highlight valid moves", "Animate AI move", "Show AI thinking state", "Display winner message"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#888888", "player_1": "#ffd700", "player_2": "#c0c0c0"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click/tap to make move", "Hover for preview/hints", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"players": {"ai": 1, "human": 1}, "game_name": "Coin Stack Circuit", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "A 6x6 grid where you sort coins into correct stacks by moving coins to adjacent empty cells or sliding within a row to form complete stacks. The AI occasionally spills extra coins that must be re-sorted.", "session_minutes": [5, 60]}, "rules": [{"id": "R1", "text": "Clear, testable rule with input/output (MUST / SHOULD / MAY).", "type": "core"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple heuristic: pick the first valid immediate improvement.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a moderate minimax with depth 4 search.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST use an advanced search with pruning and lookahead and seedable randomness for replay.", "type": "core"}], "state": {"board": {"type": "grid", "topology": "square", "neighbors": "directions: [up, down, left, right]", "dimensions": [6, 6]}, "entities": [{"name": "Player", "properties": {"id": "1", "type": "human", "color": "#1e90ff", "pieces_played": "int"}, "initial_state": {"pieces_played": 0}}, {"name": "AI", "properties": {"color": "#ff4500", "depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "pieces_played": "int", "response_delay_ms": 500}, "initial_state": {"depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}}, {"name": "Board", "properties": {"cols": "int", "grid": "2D array of cells; each cell stores occupantId|null and stack information", "rows": "int"}, "initial_state": {}}, {"name": "Game", "properties": {"status": "string (playing|human_wins|ai_wins|draw)", "last_move": "object", "move_count": "int", "current_player": "int (1 or 2)"}, "initial_state": {"status": "playing", "last_move": null, "move_count": 0, "current_player": 1}}]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation and mechanics.capture; update state; switch to AI; check end conditions", "condition": "current_player == 1 AND game.status == playing AND [move validity conditions]", "parameters": ["row", "col", "move_type", "target_row", "target_col"]}, {"name": "ai_move", "result": "AI calculates move using algorithm; apply mechanics.move_validation and mechanics.capture; update state; switch to human; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 30}, "config": {"show_ai_thinking": true, "default_difficulty": "medium", "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "Coins distributed across the 6x6 grid into color-coded stacks; stacks expect specific colors. AI may spill extra coins on its turns.", "starting_player_rule": "human"}, "capture": {"type": "area_conversion", "result": "AI spill events or re-sorting adjustments cause affected coins to re-align into their designated stacks", "directions": ["row", "column"], "chain_capture": false, "min_chain_length": 1, "require_sandwich": false, "capture_algorithm": {"name": "apply_spill_and_rebalance", "steps": ["Detect spill trigger from AI action or valid move", "Distribute spilled coins into available adjacent spots", "Rebalance stacks to reflect new layout"], "inputs": ["row", "col", "current_player", "board", "parameters"], "outputs": {"affected_count": "int"}, "parameters": {"directions": ["row", "column"], "require_bounded": false, "min_chain_length": 1}}}, "scoring": {"method": "count_pieces", "winner_determination": "Highest total of correctly stacked coins at end of game wins; in case of tie, draw"}, "movement": {"range": "1 (step) for individual moves; slides may traverse multiple cells within a row under rule checks", "allowed": "slide|move", "directions": ["up", "down", "left", "right"]}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game after two consecutive passes", "pass_if_no_valid_move": true}, "move_validation": {"validity_checks": ["target cell must be empty", "move must be to an adjacent cell or a legal row slide", "move must not violate stack capacity or color constraints"], "must_place_on_empty": true, "validation_algorithm": {"name": "grid_scan", "steps": ["Identify target coordinates", "Verify occupancy is empty", "Check adjacency or row-slide legality", "Check color/stack compatibility", "Return validity and preview of resulting state"], "inputs": ["row", "col", "current_player", "board"], "outputs": {"preview": "object", "is_valid": "boolean"}, "parameters": {"gravity": false, "directions": ["up", "down", "left", "right"], "require_bounded": true, "min_chain_length": 1}}}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 30, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "State updates deterministically and UI reflects new board", "when": "Player performs a valid move", "given": "A valid move exists per game rules"}, {"then": "AI uses simple algorithm, makes valid move within 2s", "when": "AI calculates move", "given": "AI's turn, difficulty='easy'"}, {"then": "AI MUST execute winning move if available", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "AI can win in 1 move"}, {"then": "AI MUST attempt to block human's winning path", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "Human can win next turn"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "human_objectives_completed", "check_logic": "All coins are in their designated correct stacks; human has achieved the objective before AI"}], "draw": [{"priority": "end_turn", "condition": "no_legal_moves_for_both_players", "check_logic": "During a full rotation, neither player has a legal move"}], "lose": [{"priority": "immediate", "condition": "ai_objectives_completed", "check_logic": "All coins are in their designated correct stacks; AI has achieved the objective before human"}]}}