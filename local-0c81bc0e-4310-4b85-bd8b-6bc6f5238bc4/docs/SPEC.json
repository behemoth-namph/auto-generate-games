{"ui": {"feedback": ["Highlight valid moves", "Animate AI move", "Show AI thinking state", "Display winner/loser/draw message"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#aaaaaa", "player_1": "#1f1f1f", "player_2": "#ffd166"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click/tap to perform a move", "Drag to perform a multi-step move", "Hover for previews/hints", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"players": {"ai": 1, "human": 1}, "game_name": "Forge Grid Tactics", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "Players move forge tokens on a 6x6 square grid toward forge targets while avoiding ember blockers. Tokens move to adjacent empty cells; dragging through open lines enables longer moves within a turn. The AI periodically places ember blockers to obstruct paths.", "session_minutes": [15, 30]}, "rules": [{"id": "R1", "text": "Clear, testable rule with input/output MUST produce deterministic outcomes given identical inputs.", "type": "core"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple heuristic that selects the first available legal move.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a moderate search/heuristic strategy with limited lookahead.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST use an advanced search with pruning and strategic blocker placement considerations.", "type": "core"}], "state": {"board": {"type": "grid", "topology": "square", "neighbors": "up, down, left, right", "dimensions": [6, 6]}, "entities": [{"name": "Player", "properties": {"id": 1, "type": "human", "color": "#1f1f1f", "pieces_played": 0}, "initial_state": {"pieces_played": 0}}, {"name": "AI", "properties": {"depth": 4, "algorithm": "minimax", "difficulty": "hard", "is_thinking": false, "response_delay_ms": 500}, "initial_state": {"depth": 4, "algorithm": "minimax", "difficulty": "hard", "is_thinking": false, "response_delay_ms": 500}}, {"name": "Board", "properties": {"cols": 6, "grid": "2D array of 6x6 cells; each cell either null or an entity id representing a token/blocker", "rows": 6}, "initial_state": {}}, {"name": "Game", "properties": {"status": "playing", "last_move": {}, "move_count": 0, "current_player": 1}, "initial_state": {"status": "playing", "move_count": 0, "current_player": 1}}]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation and mechanics.capture; update board and state; switch to AI; check end conditions", "condition": "current_player == 1 AND game.status == playing AND a valid move exists per move_validation", "parameters": ["sourceRow", "sourceCol", "destRow", "destCol"]}, {"name": "ai_move", "result": "AI calculates move using algorithm; apply mechanics.move_validation and mechanics.capture; update board; switch to human; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 20}, "config": {"show_ai_thinking": true, "default_difficulty": "medium", "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "Human forge tokens placed on the bottom row (row index 5) columns 0-2. AI forge tokens placed on the top row (row index 0) columns 3-5. Forge targets are designated cells along the top-center area (e.g., row 0, column 2). Ember blockers are introduced by AI during play and are not part of initial layout.", "starting_player_rule": "human"}, "capture": {"type": "none", "result": "No capture mechanic; blockers persist until removed by special rules or end of game", "directions": [], "chain_capture": false, "min_chain_length": 0, "require_sandwich": false, "capture_algorithm": {"name": "none", "steps": [], "inputs": ["row", "col", "current_player", "board", "parameters"], "outputs": {"affected_count": 0}, "parameters": {"directions": [], "require_bounded": false, "min_chain_length": 0}}}, "scoring": {"method": "points", "winner_determination": "First player to occupy a forge target with a token wins. If both players simultaneously occupy forge targets due to a multi-token move, the move that completes the objective first in turn order determines the winner. If no progress occurs and both players have no legal moves for a full round, declare a draw."}, "movement": {"range": "step:1; drag:unlimited within a connected clear path", "allowed": "step|drag", "directions": ["up", "down", "left", "right"]}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game after two consecutive passes", "pass_if_no_valid_move": true}, "move_validation": {"validity_checks": ["destination must be empty", "destination must be reachable by a valid path according to movement rules", "path must not pass through blockers or occupied cells", "movement must adhere to turn movement rules (step or drag within allowed range)"], "must_place_on_empty": true, "validation_algorithm": {"name": "path_check", "steps": ["Verify destination is within bounds and empty", "Compute a contiguous path of empty cells from source to destination", "Ensure path does not cross ember blockers or other tokens not moved", "Validate move length against allowed movement mode (step or drag)"], "inputs": ["row", "col", "current_player", "board"], "outputs": {"preview": "object", "is_valid": "boolean"}, "parameters": {"gravity": false, "directions": ["up", "down", "left", "right"], "require_bounded": false, "min_chain_length": 1}}}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 30, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "Move is applied; board updates; AI turn starts; end conditions checked", "when": "Human performs a valid move", "given": "A valid move exists per game rules"}, {"then": "AI uses simple algorithm and makes a valid move within 2s", "when": "AI calculates move", "given": "AI's turn, difficulty='easy'"}, {"then": "AI MUST execute a winning move if available", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "AI can win in 1 move"}, {"then": "AI MUST block human's potential winning move if applicable", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "Human can win next turn"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "human_reaches_forge", "check_logic": "If any human token occupies a designated forge cell (e.g., row 0, col 2) at end of a turn or during a move that ends on a forge cell"}], "draw": [{"priority": "end_turn", "condition": "no_legal_moves_for_both_or_consecutive_passes", "check_logic": "End-of-turn check detects zero legal moves for current player and symmetry for the other player; if true, declare draw"}], "lose": [{"priority": "immediate", "condition": "ai_reaches_forge", "check_logic": "If any AI token occupies a forge cell (as defined) at end of a turn"}]}}