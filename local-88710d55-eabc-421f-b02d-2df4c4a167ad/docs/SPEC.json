{"ui": {"feedback": ["Highlight chosen move", "Animate AI move", "Show AI thinking state", "Display winner message", "Update score immediately after each round"], "board_style": {"cell_size": 64, "disc_colors": {"outline": "#888888", "player_1": "#1e90ff", "player_2": "#ff4500"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#222222", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click/tap to submit move", "Keyboard shortcuts for rock/paper/scissors", "Hover for focus/preview", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button", "Scoreboard"]}, "meta": {"players": {"ai": 1, "human": 1}, "game_name": "rock paper scrissors", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "Rock, Paper, Scissors with simultaneous reveal implemented as a turn-based round system; best-of-three rounds to determine the winner. All gameplay is deterministic and replayable given fixed inputs/seeds.", "session_minutes": [1, 5]}, "rules": [{"id": "R1", "text": "Clear, testable rule with input/output (MUST/SHOULD/CAN)", "type": "core|validation|optional"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple, deterministic choice among rock/paper/scissors.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a moderate rule-based strategy.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST use an enhanced strategy with predictive tendencies.", "type": "core"}], "state": {"board": {"type": "free", "topology": "none", "neighbors": "none", "dimensions": [0, 0]}, "entities": [{"name": "Player", "properties": {"id": 1, "type": "human", "color": "#1e90ff", "pieces_played": 0}, "initial_state": {"pieces_played": 0}}, {"name": "AI", "properties": {"depth": 1, "algorithm": "rule_based", "difficulty": "easy", "is_thinking": false, "response_delay_ms": 300}, "initial_state": {"depth": 1, "algorithm": "rule_based", "difficulty": "easy", "is_thinking": false, "response_delay_ms": 300}}, {"name": "Board", "properties": {"cols": 0, "grid": "abstract_move_space", "rows": 0}, "initial_state": {}}, {"name": "Game", "properties": {"status": "playing", "last_move": null, "move_count": 0, "current_player": 1}, "initial_state": {"round": 0, "status": "playing", "ai_wins": 0, "human_wins": 0, "move_count": 0, "current_player": 1}}]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Record human's move for the current round; wait for AI move; after AI move, determine round winner; update scores; increment round; switch to AI or end game if win condition reached", "condition": "current_player == 1 AND game.status == playing", "parameters": ["move"]}, {"name": "ai_move", "result": "AI selects move using rule_based algorithm; apply move; compute round result against human_move; update scores; increment round; switch to human; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values; prepare a fresh best-of-three match", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 30}, "config": {"rng_related": {"PRNG_ALGO": "xoshiro256**", "SEED_SOURCE": "server_seed"}, "show_ai_thinking": true, "default_difficulty": "easy", "ai_response_delay_ms": 300, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "Each round consists of both players secretly selecting rock, paper, or scissors; no spatial placement required.", "starting_player_rule": "human"}, "capture": {"type": "none", "result": "no captures in RPS", "directions": [], "chain_capture": false, "min_chain_length": 0, "require_sandwich": false, "capture_algorithm": {"name": "none", "steps": [], "inputs": [], "outputs": {}, "parameters": {}}}, "scoring": {"method": "points", "winner_determination": "After each round, increment human_wins or ai_wins based on the round winner; first to 2 wins the match; if 3 rounds played with no 2-win result, declare a draw"}, "movement": {"range": 0, "allowed": "none", "directions": []}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game after two round wins by either side", "pass_if_no_valid_move": true}, "move_validation": {"validity_checks": ["move must be one of: rock, paper, scissors"], "must_place_on_empty": false, "validation_algorithm": {"name": "choices_check", "steps": ["Check if current_move is in allowedMoves", "If valid, set is_valid to true and set preview to the chosen move", "If invalid, set is_valid to false and provide an error response"], "inputs": ["current_move", "state"], "outputs": {"preview": "object|null", "is_valid": "boolean"}, "parameters": {"allowedMoves": ["rock", "paper", "scissors"]}}}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 30, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}}, "acceptance": [{"then": "Human move is recorded; AI move computed; round result computed and displayed; scores update; next round begins", "when": "Human action performed", "given": "Initial state description"}, {"then": "AI uses the rule-based algorithm and responds within 2s", "when": "AI calculates move at easy/ deterministically", "given": "A valid human move"}, {"then": "Game ends with the appropriate winner modal", "when": "End conditions are checked", "given": "Two round wins by either side"}, {"then": "Draw state is declared and displayed", "when": "End conditions checked", "given": "Three rounds completed with no winner"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "human_wins >= 2", "check_logic": "Human has reached two round wins (best-of-three)."}], "draw": [{"priority": "end_turn", "condition": "round >= 3 AND human_wins < 2 AND ai_wins < 2", "check_logic": "Three rounds completed with neither side reaching two wins."}], "lose": [{"priority": "immediate", "condition": "ai_wins >= 2", "check_logic": "AI has reached two round wins (best-of-three)."}]}}