{"ui": {"aria": {"cell_label_template": "Cell {row},{col} - {content}"}, "feedback": ["Highlight valid moves", "Animate AI move", "Show AI thinking state", "Display winner message"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#aaaaaa", "player_1": "#000000", "player_2": "#ffffff"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click/tap to make move", "Hover for preview/hints", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"players": {"ai": 1, "human": 1}, "game_name": "Moonlit Mines", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "Turn-based 6x6 grid where the human scout moves to adjacent safe cells while the AI secretly places mine tokens to impede progress; the human objective is to reach the far exit while avoiding mines. AI increases tension by adding one mine token every few moves.", "session_minutes": [5, 60]}, "rules": [{"id": "R1", "text": "All gameplay MUST be deterministic and replayable under fixed seeds.", "type": "core"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple heuristic to place mines and select safe near-term moves.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a moderate heuristic to balance mine placement and path disruption.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST use an advanced heuristic to maximize tension while preserving solvability.", "type": "core"}, {"id": "R_AI_MINE_1", "text": "AI MUST add exactly one new mine token after every three human moves (except when end conditions occur).", "type": "core"}], "state": {"board": {"type": "grid", "topology": "square", "neighbors": ["N", "S", "E", "W"], "dimensions": [6, 6]}, "entities": [{"name": "Player", "properties": {"id": 1, "type": "human", "color": "#000000", "pieces_played": 0}, "initial_state": {"pieces_played": 0}}, {"name": "AI", "properties": {"depth": 2, "algorithm": "rule_based", "difficulty": "easy", "is_thinking": false, "response_delay_ms": 500}, "initial_state": {"depth": 2, "algorithm": "rule_based", "difficulty": "easy", "is_thinking": false, "response_delay_ms": 500}}, {"name": "Board", "properties": {"cols": 6, "grid": "2D array of cells with occupant and mine flags; pre-seeded mine layout is deterministic per seed", "rows": 6}, "initial_state": {}}, {"name": "Game", "properties": {"status": "string (playing|human_wins|ai_wins|draw)", "last_move": "object", "move_count": "int", "current_player": "int (1 or 2)"}, "initial_state": {"status": "playing", "move_count": 0, "current_player": 1}}]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation and mechanics.capture; update state; switch to AI; check end conditions", "condition": "current_player == 1 AND game.status == playing AND [move validity conditions]", "parameters": ["row", "col"]}, {"name": "ai_move", "result": "AI calculates move using algorithm; apply mechanics.move_validation and mechanics.capture; update state; switch to human; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 30}, "config": {"ui": {"hit_target_min_px": 40, "hit_target_padding_px": 8}, "rng": {"seed": "MoonlitSeed-001", "algorithm": "xoshiro256**"}, "show_ai_thinking": true, "default_difficulty": "easy", "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "Human scout starts at (0,0). The board is pre-seeded with a deterministic distribution of mine tokens and safe cells using the game seed. The AI starts with 0 additional mines and will place mines as the game progresses.", "starting_player_rule": "human"}, "capture": {"type": "none", "result": "No capture occurs via movement; mines are controlled by AI", "directions": [], "chain_capture": false, "min_chain_length": 0, "require_sandwich": false, "capture_algorithm": {"name": "none", "steps": [], "inputs": [], "outputs": {"affected_count": 0}, "parameters": {}}}, "scoring": {"method": "points", "winner_determination": "The player with more points at game end wins; points awarded for safe progress toward exit and successful moves while mines impose penalties or risk."}, "movement": {"range": "step = 1; drag = up to 2 cells", "allowed": "step|drag", "directions": ["N", "S", "E", "W"]}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game after two consecutive passes", "pass_if_no_valid_move": true}, "move_validation": {"validity_checks": ["destination must be adjacent to the scout's current position", "destination cell must be safe (not currently a mine)"], "must_place_on_empty": true, "validation_algorithm": {"name": "path_check", "steps": ["Identify current scout position for current_player.", "Validate destination is neighboring in one of the allowed directions.", "Check destination is within bounds and not occupied by a mine.", "Return is_valid and a preview of the new state if valid."], "inputs": ["row", "col", "current_player", "board"], "outputs": {"preview": "object", "is_valid": "boolean"}, "parameters": {"gravity": false, "directions": ["N", "S", "E", "W"], "require_bounded": false, "min_chain_length": 1}}}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 60, "max_load_time_ms": 1500, "max_ai_think_time_ms": 2000}, "seed_preservation": true, "determinism_enforcement": true}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "State updates correctly: scout position, move_count increments, last_move recorded", "when": "Player performs a valid move", "given": "A valid move exists per game rules"}, {"then": "AI uses simple heuristic and makes a valid move within 2s", "when": "AI calculates move", "given": "AI's turn, difficulty='easy'"}, {"then": "AI MUST execute a winning move if available", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "AI can win in 1 move"}, {"then": "AI MUST not block an inevitable human win if that would violate deterministic rules; otherwise it must block if a blocking move exists", "when": "AI's turn, difficulty='medium' or 'hard'", "given": "Human can win next turn"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "human_reaches_exit", "check_logic": "Player 1's scout position equals exit cell (5,5) and the cell is not mined"}], "draw": [{"priority": "end_turn", "condition": "no_legal_moves_available", "check_logic": "End turn with no valid moves for both sides"}], "lose": [{"priority": "immediate", "condition": "scout_destroyed_by_mine", "check_logic": "Scout token is removed or destroyed due to mine explosion or capture"}]}}