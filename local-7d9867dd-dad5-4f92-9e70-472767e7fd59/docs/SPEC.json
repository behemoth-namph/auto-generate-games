{"ui": {"feedback": ["Highlight valid moves", "Animate AI move", "Show AI thinking state", "Display winner/loser/draw modal", "Show meteor blocking animation"], "board_style": {"cell_size": 48, "disc_colors": {"outline": "#aaaaaa", "player_1": "#000000", "player_2": "#ffffff"}, "flip_animation": {"enabled": true, "duration_ms": 180}, "grid_line_color": "#333333", "last_move_highlight": {"color": "#ffcc00", "enabled": true}, "valid_move_highlight": {"color": "#66ccff", "enabled": true}}, "interactions": ["Click to move a token to an adjacent empty cell", "Drag to move along straight line to an empty cell", "Hover for hints", "Click restart button"], "display_elements": ["Board/game area", "Current player indicator (You vs AI)", "AI thinking indicator", "Game status message", "Restart button"]}, "meta": {"players": {"ai": 1, "human": 1}, "game_name": "Space Station Switch", "game_type": "board", "player_mode": "player_vs_ai", "core_mechanic": "Airlock tokens must be routed to docking stations on an 8x8 grid. Players move a token to a neighboring empty cell by clicking, or drag along a straight line to an empty cell. The AI deploys a meteor token that temporarily blocks a cell to disrupt routes.", "session_minutes": [5, 15]}, "rules": [{"id": "R1", "text": "MUST define deterministic, replayable rules; UI reads selectors; no gameplay logic duplication in UI components.", "type": "core"}, {"id": "R_AI_1", "text": "AI MUST make a move within 2 seconds of its turn starting.", "type": "core"}, {"id": "R_AI_2", "text": "AI with difficulty 'easy' MUST use a simple greedy move heuristic.", "type": "core"}, {"id": "R_AI_3", "text": "AI with difficulty 'medium' MUST use a moderate-depth minimax search with pruning.", "type": "core"}, {"id": "R_AI_4", "text": "AI with difficulty 'hard' MUST use an advanced search with lookahead and blocking awareness.", "type": "core"}], "state": {"board": {"type": "grid", "topology": "square", "neighbors": "['up','down','left','right']", "dimensions": [8, 8]}, "entities": [{"name": "Player", "properties": {"id": 1, "type": "human", "color": "#000000", "pieces_played": 0}, "initial_state": {"pieces_played": 0}}, {"name": "AI", "properties": {"depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}, "initial_state": {"depth": 4, "algorithm": "minimax", "difficulty": "medium", "is_thinking": false, "response_delay_ms": 500}}, {"name": "Board", "properties": {"cols": 8, "grid": "2D array of cells with occupant reference and blocking state", "rows": 8}, "initial_state": {}}, {"name": "Game", "properties": {"status": "playing", "last_move": {}, "move_count": 0, "current_player": 1}, "initial_state": {"status": "playing", "move_count": 0, "current_player": 1}}]}, "turns": {"order": "Human (Player 1) → AI (Player 2) → repeat", "actions": [{"name": "player_move", "result": "Apply mechanics.move_validation; update state; apply meteor blocking logic if meteor is deployed; update last_move; switch to AI; check end conditions", "condition": "current_player == 1 AND game.status == playing AND move is valid per mechanics.move_validation", "parameters": ["sourceRow", "sourceCol", "destRow", "destCol"]}, {"name": "ai_move", "result": "AI computes move with minimax; apply mechanics.move_validation and apply meteor deployment; update state; switch to human; check end conditions", "condition": "current_player == 2 AND game.status == playing", "parameters": []}, {"name": "restart", "result": "Reset all state to initial values", "condition": "game.status != playing", "parameters": []}], "max_time_seconds": 30}, "config": {"show_ai_thinking": true, "default_difficulty": "medium", "ai_response_delay_ms": 500, "allow_difficulty_change": true}, "mechanics": {"setup": {"initial_placement": "Airlock tokens placed on predefined start zones; docking stations fixed targets; meteor token pool controlled by AI with a limited duration (temporary block).", "starting_player_rule": "human"}, "capture": {"type": "none", "result": "No captures occur; only movement and temporary blocking by meteor", "directions": [], "chain_capture": false, "min_chain_length": 0, "require_sandwich": false, "capture_algorithm": {"name": "none", "steps": [], "inputs": [], "outputs": {"affected_count": 0}, "parameters": {}}}, "scoring": {"method": "count_pieces_to_docking", "winner_determination": "Player who docks all airlock tokens first wins; if both achieve docking, winner is the one with fewer moves; otherwise draw"}, "movement": {"range": 1, "allowed": "step|slide", "directions": ["up", "down", "left", "right"]}, "turn_flow": {"switch_after_move": true, "extra_turn_conditions": "end game after two consecutive passes", "pass_if_no_valid_move": true}, "move_validation": {"validity_checks": ["destination is adjacent for single-step moves", "destination is in same row or column for straight-line drag moves and is empty", "path from source to destination is unobstructed by other tokens, except meteor if applicable"], "must_place_on_empty": true, "validation_algorithm": {"name": "path_check", "steps": ["Confirm source contains current player's token", "If destination is adjacent, ensure empty", "If destination is along a straight line, ensure all intermediate cells are empty (excluding meteor blocking when applicable)", "Destination must be a docking-accessible empty cell or a valid path segment"], "inputs": ["row", "col", "current_player", "board"], "outputs": {"preview": {}, "is_valid": true}, "parameters": {"gravity": false, "directions": ["up", "down", "left", "right"], "require_bounded": true, "min_chain_length": 1}}}}, "technical": {"platform": "HTML5 Canvas", "performance": {"target_fps": 30, "max_load_time_ms": 1000, "max_ai_think_time_ms": 2000}}, "acceptance": [{"then": "Expected result with specific values", "when": "Human action performed", "given": "Initial state description"}, {"then": "State updates accordingly and AI turn starts", "when": "Player performs a valid move", "given": "A valid move exists per game rules"}, {"then": "AI uses simple greedy move within 2s", "when": "AI calculates move", "given": "AI's turn, difficulty='easy'"}, {"then": "Player wins", "when": "Game ends", "given": "All airlock tokens docked"}, {"then": "Draw result is declared", "when": "Turn passes", "given": "No legal moves for both players"}], "end_conditions": {"win": [{"priority": "immediate", "condition": "All airlock tokens are on their docking stations", "check_logic": "Each airlock token must occupy its corresponding docking target; all docking conditions satisfied"}], "draw": [{"priority": "end_turn", "condition": "No legal moves exist for both players for a full turn cycle", "check_logic": "Both players have no valid moves within their time window"}], "lose": [{"priority": "end_turn", "condition": "Time limit exceeded or irreversible deadlock", "check_logic": "If a player cannot make a legal move within the time window and no progress is possible"}]}}